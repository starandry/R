CREATE  DATABASE  имя_базы   //создание базы данных 

USE имя_базы;    //После того, как база создана, для ее использования выполняют эту команду

CREATE TABLE имя_таблицы(имя_поля тип, имя_поля тип.....);    //Создание таблиц

если при добавлении записи не были указаны данные для поля, у вас есть возможность задать значение по умолчанию, которое будет использоваться в этом случае. Для этого используется ключевое слово DEFAULT, после которого ставится нужное значение.

Если необходимо создать первичный ключ, в MySQL, при создании таблицы он указывается в списке полей, обычно через запятую после последнего поля в виде PRIMARY KEY (имя поля). 

Если вы хотите запретить пустые значения в столбце, при создании таблицы следует после типа поля указать NOT NULL

Если по какому-нибудь полю часто будет выполняться поиск его можно сделать индексированным, указав INDEX(имя_поля) в конце списка полей таблицы (аналогично с PRIMARY KEY).

Если вам необходимо запретить повторы значений, т.е. все значения в столбце должны быть уникальными, это можно сделать для индексов. при объявлении следует указать UNIQUE(имя_индекса), аналогично поместив его в конце списка полей при объявлении таблицы.

Добавление записи в таблицу осуществляется с помощью команды INSERT INTO.

INSERT INTO имя_таблицы VALUES(значение1, значение2, значение3...);

INSERT INTO имя_таблицы (имя_поля1, имя_поля2...) VALUES(значение1, значение2...);  //позволяет добавлять запись с меньшим количеством значений, или с другим порядком следования. 

SELECT имена_полей FROM имя таблицы;  //выборка
SELECT * FROM expenses;  //выборка всех  полей

ORDER BY - для упорядочивания
SELECT * FROM expenses ORDER BY value; 

DESC - по убыванию
SELECT * FROM expenses ORDER BY value DESC;

DELETE FROM имя_таблицы WHERE условие;  //удаление записей из  таблицы

UPDATE имя_таблицы SET имя_столбца=значение, имя_столбца=значение...WHERE условие;   //изменения в записи таблицы по условию

DROP TABLE имя_таблицы;  //удаление самой таблицы

DROP DATABASE имя базы;  //удаление самой базы данных

ALTER TABLE receivers ADD address VARCHAR(255);   //добавление колонки  адресс в таблицу получатели

ALTER TABLE receivers DROP address;  //удаление колонки  адресс в получателях

Добавленную  колонку можно  сделать  индексной:
ALTER TABLE receivers ADD INDEX(name);

Зависимость  полей таблицы друг  от друга выражается в том, что  если  изменить  
какое-то  поле в таблице, то следом за изменением должно  изменится и другое поле в 
записи таблицы. Это  и  есть  зависимость. Но если  другое поле не меняется в записи  после изменения первого, тогда зависимости  нет.

В блоке FROM после имени таблицы через пробел указывается псевдоним

Можно также давать псевдонимы полям в разделе SELECT , как впрочем и другим элементам запроса, для этого после поля пишется AS и новое имя

Отбор уникальных строк DISTINCT
SELECT DISTINCT value,name FROM expences, reseivers rs WHERE receiver=rs.num;

Чтобы вывести не все записи результата, а только часть следует воспользоваться ключевым словом LIMIT после которого указывается номер строки, с которой начинается вывод и количество выводимых строк.
SELECT paydate,value,name FROM expenses, receivers rs WHERE receiver=rs.num LIMIT 0,5;
В результате, будет показано только 5 записей начиная с нулевой, т.е. с начала таблицы. 

Поиск информации по  шаблону 
строка LIKE шаблон
% — означает любое количество любых символов;
_ — означает один любой символ.
SELECT num,name FROM receivers WHERE name LIKE 'Гипермаркет%';
//Такой запрос выдаст список всех получателей, названия которых начинаются с Гипермаркет

COUNT() - функция осуществляющая подсчет строк. 
SELECT COUNT(*) FROM expenses;

функция MAX(имя_поля) ищет максимальное значение. 
SELECT MIN(paydate) FROM expenses;
SELECT MAX(value) as Максимум FROM expenses;

Чтобы просуммировать значения в столбце, используется агрегатная функция SUM(имя_поля). 
SELECT SUM(value) FROM expenses WHERE YEAR(paydate) = 2012;

функция для среднего значения - AVG(имя_поля).
SELECT AVG(value) FROM expenses;

Группировка выполняется с помощью ключевых слов GROUP BY имя_поля в конце запроса
SELECT paydate,value,name FROM expenses, receivers rs WHERE receiver=rs.num 
GROUP BY name;
 















